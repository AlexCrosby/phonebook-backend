{"version":3,"sources":["components/AddNew.js","components/Numbers.js","components/Filter.js","services/PhoneNumbers.js","components/Error.js","App.js","index.js"],"names":["AddNew","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Numbers","persons","filter","deletePerson","peopleToShow","person","name","toLowerCase","includes","map","key","id","number","onClick","Filter","handleFilterChange","url","axios","get","then","response","data","post","window","confirm","delete","put","Error","message","color","errorStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","ErrorMessage","setErrorMessage","errorColor","setErrorColor","useEffect","numberService","event","target","preventDefault","length","personToUpdate","find","p","setTimeout","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecb8aa4f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AddNew = ({addName, newName, newNumber, handleNameChange, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddNew","import React from \"react\";\r\n\r\nconst Numbers = ({persons, filter, deletePerson}) => {\r\n    const peopleToShow = persons.filter(person => {\r\n            return (\r\n                person.name.toLowerCase().includes(filter.toLowerCase()))\r\n        }\r\n    )\r\n    return (\r\n        <>\r\n            {peopleToShow.map(person => <p key={person.id}>\r\n                {person.name} {person.number}&nbsp;\r\n                <button onClick={()=>deletePerson(person)}>delete</button>\r\n            </p>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Numbers","import React from \"react\";\r\n\r\n\r\nconst Filter=({handleFilterChange})=>{\r\n    return(\r\n        <div>\r\n            filter shown with\r\n        <input onChange={handleFilterChange}/>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Filter","import axios from 'axios'\r\n\r\n\r\nconst url = '/api/persons/'\r\n\r\nconst getAll = () => {\r\n\r\n    return axios.get(url)\r\n        .then(response => {\r\n            return (response.data)\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\nconst addNew = (person) => {\r\n    return axios.post(url, person).then(response => {\r\n        return response.data\r\n    })\r\n\r\n}\r\n\r\nconst deleteName = person => {\r\n\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n        return axios.delete(url + person.id).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\nconst update = person=>{\r\n    return axios.put(url+person.id, person).then(response=>{return response.data})\r\n}\r\n\r\nexport default {getAll, addNew, deleteName, update}","import React from \"react\";\r\nconst Error = ({message,color}) => {\r\n\r\n\r\nlet errorStyle={\r\n        background: 'lightgrey',\r\n        fontSize: '20',\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n\r\n\r\n    if (message === null) {\r\n        return null\r\n    } else {\r\n        if (color==='green'){\r\n        errorStyle.color='green'}\r\n        else{errorStyle.color='red'}\r\n        return (\r\n            <div style={errorStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Error","import React, {useState, useEffect} from 'react'\nimport AddNew from \"./components/AddNew\";\nimport Numbers from \"./components/Numbers\";\nimport Filter from \"./components/Filter\";\nimport numberService from \"./services/PhoneNumbers\"\nimport Error from \"./components/Error\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]),\n        [newName, setNewName] = useState(''),\n        [newNumber, setNewNumber] = useState(''),\n        [newFilter, setNewFilter] = useState(''),\n        [ErrorMessage, setErrorMessage] = useState(null),\n        [errorColor, setErrorColor] = useState('red')\n\n\n    useEffect(() => {\n        numberService.getAll().then(response => setPersons(response))\n\n    }, [])\n\n    const addName = (event) => {\n        event.preventDefault()\n        if (persons.filter(person => person.name.toLowerCase() === newName.toLowerCase()).length > 0) {\n            const updateCheck = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)\n\n            if (updateCheck) {\n                let personToUpdate = persons.find(p => p.name === newName)\n                personToUpdate = {...personToUpdate, number: newNumber}\n                numberService.update(personToUpdate).then(() => {\n                    setPersons(persons.map(p => p.name === newName ? personToUpdate : p))\n                    setErrorColor('green')\n                    setErrorMessage(`Updated ${newName}`)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                }).catch(error => {\n                    setErrorColor('red')\n                    setErrorMessage(`Information of ${newName} has already been removed from server`)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n\n                })\n\n            }\n\n\n        } else {\n            const newPerson = {name: newName, number: newNumber}\n            numberService.addNew(newPerson).then(data => {\n                setPersons(persons.concat(data))\n                setErrorColor('green')\n                setErrorMessage(`Added ${newName}`)\n            })\n                .catch(error => {\n                    setErrorColor('red')\n                    setErrorMessage(error.response.data.error)\n\n                })\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleFilterChange = event => {\n        setNewFilter(event.target.value)\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const deletePerson = (person) => {\n        numberService.deleteName(person)\n            .then(() => setPersons(persons.filter(p => {\n                return p.id !== person.id\n            })))\n\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Error message={ErrorMessage} color={errorColor}/>\n            <Filter handleFilterChange={handleFilterChange}/>\n            <h3>Add a new</h3>\n            <AddNew handleNameChange={handleNameChange}\n                    handleNumberChange={handleNumberChange}\n                    newName={newName} newNumber={newNumber}\n                    addName={addName}/>\n\n            <h3>Numbers</h3>\n            <Numbers persons={persons} filter={newFilter} deletePerson={deletePerson}/>\n        </div>\n    )\n}\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}